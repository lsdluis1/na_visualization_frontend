{"version":3,"sources":["components/toggleSwitch.js","drawing/drawFunctionPoints.js","components/floatingPoint.js","canvas/pointCanvas.jsx","pointSetter.js","api/parsePoints.js","index.js"],"names":["Toggle","props","toggle","useRef","checkbox","ref","name","className","type","defaultChecked","value","onClick","onChange","current","checked","classList","onToggle","drawFunctionPoints","ctx","points","style","color","width","sort","a","b","x","y","length","beginPath","map","point","index","nextPoint","moveTo","lineTo","strokeStyle","lineWidth","stroke","FloatingPoint","initialPosition","useMemo","position","initialAnimationFrameCount","animationFrameCount","animationDisplacementRef","useState","deltaX","deltaY","lastX","lastY","dragData","setDragData","updatePivotalPoint","key","animationDisplacement","_","isUndefined","newPoint","handleDrag","animated","animation","useEffect","pointStyle","pointSize","onDrag","_event","left","top","height","borderRadius","background","opacity","PointCanvas","canvasRef","draw","pathPoints","lineStyle","canvasStyle","context","getContext","clearRect","canvas","fillStyle","arc","Math","PI","fill","drawCoordinates","pivotalPoints","PositionSetter","pp","setPivotalPoints","setPathPoints","connection","socketio","connect","on","newPathArray","element","interval","setInterval","disconnect","clearInterval","positionArray","emit","throttledHandleDragRef","draggedPoint","updateIndex","findIndex","p","setAnimationFrameCount","prev","onDoubleClick","random","toString","push","App","setAnimated","ReactCursorPosition","cos","sin","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.01b29615.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./toggleSwitch.css\";\nToggle.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  name: PropTypes.string,\n  checked: PropTypes.bool,\n};\nexport default function Toggle(props) {\n  const toggle = useRef();\n  const checkbox = useRef();\n  function handleToggle() {\n    if (props.onChange) props.onChange(checkbox.current.checked);\n    toggle.current.classList.toggle(\"toggled\");\n    checkbox.current.checked = !checkbox.current.checked;\n    if (props.onToggle) props.onToggle(checkbox.current.checked);\n  }\n  return (\n    <>\n      <input\n        ref={checkbox}\n        name={props.name}\n        className=\"toggle-checkbox\"\n        type=\"checkbox\"\n        defaultChecked={props.value}\n        value={props.value || false}\n      />\n      <span\n        ref={toggle}\n        onClick={handleToggle}\n        className={props.checked ? \"toggled toggle-switch\" : \"toggle-switch\"}\n      >\n        <span className=\"toggle\"></span>\n      </span>\n    </>\n  );\n}\n","const drawFunctionPoints = (ctx, points, style) => {\n  const { color = \"black\", width = 1 } = style;\n\n  function sort_function(a, b) {\n    if (a.x > b.x) return 1;\n    if (a.x < b.x) return -1;\n    if (a.y > b.y) return 1;\n    if (a.y < b.y) return -1;\n  }\n  points.sort(sort_function);\n\n  if (points.length > 1) {\n    ctx.beginPath();\n    points.map((point, index) => {\n      if (index >= points.length - 1) {\n        return;\n      }\n      const nextPoint = points[index + 1];\n      ctx.moveTo(point.x, point.y);\n      ctx.lineTo(nextPoint.x, nextPoint.y);\n    });\n    ctx.strokeStyle = color;\n    ctx.lineWidth = width;\n    ctx.stroke();\n  }\n};\n\nexport default drawFunctionPoints;\n","import React, { useMemo, useEffect, useRef, useState } from \"react\";\nimport Draggable from \"react-draggable\";\nimport _ from \"lodash\";\n\nexport default function FloatingPoint(props) {\n  const initialPosition = useMemo(() => props.point.position, []);\n  const initialAnimationFrameCount = useMemo(\n    () => props.animationFrameCount,\n    []\n  );\n  const animationDisplacementRef = useRef();\n\n  const [dragData, setDragData] = useState({\n    x: 0,\n    y: 0,\n    deltaX: 0,\n    deltaY: 0,\n    lastX: 0,\n    lastY: 0,\n  });\n\n  const updatePivotalPoint = () => {\n    const { key } = props.point;\n    const animationDisplacement = _.isUndefined(\n      animationDisplacementRef.current\n    )\n      ? { x: 0, y: 0 }\n      : animationDisplacementRef.current;\n\n    const newPosition = {\n      x: initialPosition.x + animationDisplacement.x + dragData.x,\n      y: initialPosition.y + animationDisplacement.y + dragData.y,\n    };\n    const newPoint = { key, position: newPosition };\n    props.handleDrag(newPoint);\n  };\n\n  const { animated, animation, animationFrameCount } = props;\n\n  useEffect(() => {\n    if (animated) {\n      animationDisplacementRef.current = animation(\n        animationFrameCount - initialAnimationFrameCount\n      );\n      updatePivotalPoint();\n    }\n  }, [animationFrameCount]);\n\n  const handleDrag = (_event, dragData) => {\n    setDragData(dragData);\n    updatePivotalPoint();\n  };\n\n  const { pointSize, color } = props.pointStyle;\n  const animationDisplacement = _.isUndefined(animationDisplacementRef.current)\n    ? { x: 0, y: 0 }\n    : animationDisplacementRef.current;\n\n  return (\n    <Draggable onDrag={handleDrag}>\n      <div\n        className=\"drag-wrapper\"\n        style={{\n          position: \"absolute\",\n          left: initialPosition.x + animationDisplacement.x - pointSize,\n          top: initialPosition.y + animationDisplacement.y - pointSize,\n          width: 2 * pointSize,\n          height: 2 * pointSize,\n          borderRadius: \"100%\",\n          background: color,\n          opacity: animated ? 0 : 0,\n        }}\n      ></div>\n    </Draggable>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\nimport \"./pointCanvas.css\";\n\nfunction drawCoordinates(ctx, x, y, pointStyle) {\n  const { color = \"#ff2626\", pointSize = 10 } = pointStyle;\n  ctx.beginPath();\n  ctx.fillStyle = color;\n  ctx.arc(x, y, pointSize, 0, 2 * Math.PI);\n  ctx.fill();\n}\n\nfunction PointCanvas(props) {\n  const canvasRef = useRef(null);\n  const {\n    draw,\n    pathPoints,\n    points,\n    pointStyle,\n    lineStyle,\n    canvasStyle,\n  } = props;\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext(\"2d\");\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n\n    draw(context, pathPoints, lineStyle);\n    points.map((point) => {\n      drawCoordinates(context, point.position.x, point.position.y, pointStyle);\n    });\n  }, [points, pathPoints]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      width={canvasStyle.width}\n      height={canvasStyle.height}\n      {...props}\n    />\n  );\n}\n\nexport default PointCanvas;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport drawFunctionPoints from \"./drawing/drawFunctionPoints\";\nimport FloatingPoint from \"./components/floatingPoint\";\nimport PointCanvas from \"./canvas/pointCanvas\";\nimport socketio from \"socket.io-client\";\nimport { arrayToPoints, pointsToArray } from \"./api/parsePoints\";\nimport _ from \"lodash\";\n\nconst pivotalPoints = [];\n\nexport default function PositionSetter(props) {\n  const [pp, setPivotalPoints] = useState([]);\n  const [pathPoints, setPathPoints] = useState([]);\n  const apiUrl = \"https://www.dawnpond.me:80\";\n  // const apiUrl = \"http://localhost:80\";\n  const connection = useRef(null);\n\n  useEffect(() => {\n    connection.current = socketio.connect(apiUrl);\n\n    connection.current.on(\"path points\", (newPathArray) =>\n      setPathPoints(arrayToPoints(newPathArray))\n    );\n\n    const interval = setInterval(() => {\n      setPivotalPoints([...pivotalPoints]);\n    }, 1000 / 60);\n\n    return () => {\n      connection.current.disconnect();\n      clearInterval(interval);\n    };\n  }, []);\n\n  useEffect(() => {\n    const positionArray = pointsToArray(pp);\n    connection.current.emit(\"pivotal points\", positionArray);\n  }, [pp]);\n\n  const throttledHandleDragRef = useRef();\n  throttledHandleDragRef.current = (draggedPoint) => {\n    const updateIndex = _.findIndex(\n      pivotalPoints,\n      (p) => p.key === draggedPoint.key\n    );\n    pivotalPoints[updateIndex] = draggedPoint;\n  };\n\n  const appendPoint = () => {\n    const MAX_POINT_NUM = 100;\n    const key = Math.random().toString(36);\n    const { position } = props;\n\n    if (pivotalPoints.length < MAX_POINT_NUM) {\n      pivotalPoints.push({ position, key });\n    }\n  };\n\n  const [animationFrameCount, setAnimationFrameCount] = useState(0);\n\n  const { animated, animation, lineWidth, pointSize } = props;\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (animated) {\n        setAnimationFrameCount((prev) => prev + 1);\n      }\n    }, 1000 / 60);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [animated]);\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n        background: \"skyblue\",\n      }}\n      onDoubleClick={appendPoint}\n    >\n      {pp.map((point) => {\n        return (\n          <FloatingPoint\n            animated={animated}\n            animation={animation}\n            animationFrameCount={animationFrameCount}\n            handleDrag={throttledHandleDragRef.current}\n            point={point}\n            pointStyle={{\n              // Just for debugging\n              pointSize: 10,\n              color: \"yellow\",\n            }}\n          />\n        );\n      })}\n      <PointCanvas\n        draw={drawFunctionPoints}\n        pathPoints={pathPoints}\n        points={pp}\n        lineStyle={{ color: \"black\", width: lineWidth }}\n        pointStyle={{ color: \"red\", pointSize: pointSize }}\n        canvasStyle={{ width: 1600, height: 1000 }}\n      />\n\n      {/* <p>{JSON.stringify(props)}</p>\n      <p>{JSON.stringify(pp)}</p> */}\n    </div>\n  );\n}\n","export function pointsToArray(points) {\n  return points.map((point) => [point.position.x, point.position.y]);\n}\nexport function arrayToPoints(array) {\n  return array.map((element) => ({ x: element[0], y: element[1] }));\n}\n","import ReactDOM from \"react-dom\";\nimport ReactCursorPosition from \"react-cursor-position\";\nimport Toggle from \"./components/toggleSwitch\";\nimport { useState } from \"react\";\n\nimport \"./styles.css\";\nimport PositionSetter from \"./pointSetter\";\n\nfunction App() {\n  const [animated, setAnimated] = useState(false);\n  return (\n    <div>\n      <Toggle onToggle={setAnimated} />\n      <ReactCursorPosition style={{ position: \"absolute\" }}>\n        <PositionSetter\n          style={{ pointSize: 10, lineWidth: 5 }}\n          animated={animated}\n          animation={(animationFrameCount) => ({\n            x: 100 * Math.cos((animationFrameCount % 60) * (Math.PI / 30)),\n            y: 100 * Math.sin((animationFrameCount % 60) * (Math.PI / 30)),\n          })}\n        />\n      </ReactCursorPosition>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}